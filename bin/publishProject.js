'use strict';var e=require('commander'),o=require('path'),r=require("fs"),i=require("pump"),t=require('compressing'),a=require("./config/common"),n=a.project_dir,s=a.process_dir,c=a.API_LEVEL,l=a.SDK_VERSION,p=a.makeDirsSync;e.version("version:"+l).usage("<packageName>").option("-t, --target [dir]","\u8f93\u51fa\u7684\u76ee\u6807\u6587\u4ef6\u5939","").description("\u6253\u6210\u53d1\u5e03\u5305").parse(process.argv);try{!(function(){if((e.args||[]).length<1)return e.outputHelp(),void process.exit(1001);var a=e.args[0],l=o.join(n,"projects",a),g=o.join(l,"project.json"),u=!(!e.target||!e.target.length)&&e.target,d=o.join(l,"build"),f=u?o.isAbsolute(u)?u:o.join(s,u):o.join(d,"publish.pkg");if(p(o.dirname(f)),p(o.dirname(d)),!r.existsSync(l)||!r.existsSync(g))return console.log("invalid package path"),void process.exit(1002);var j=JSON.parse(r.readFileSync(g).toString());if(j.package_path==a){j.min_sdk_api_level=c,j.package_path=a,console.log(j),j=Buffer.from(JSON.stringify(j)),console.log("Ready to create publish package file:"),console.log(o.relative(s,f));var h=new t.zip.Stream,m=o.join(d,"project.json");r.writeFileSync(m,j),h.addEntry(m),r.readdirSync(l).forEach(function(e){if(e&&""!=e&&"build"!=e&&"project.json"!=e&&!e.startsWith(".")){var r=o.join(l,e);console.log("compressing:"+e),h.addEntry(r)}}),i(h,r.createWriteStream(f),function(e){e&&console.log("failed to create publish file",e),e||(console.log("Publish package file for publish is generated:"),console.log(f))})}else console.log("invalid package path in project.json")})()}catch(e){console.log(e)}